name: 'C++ API Documentation'
description: 'Generate and publish Doxygen documentation'
branding:
  icon: 'book-open'
  color: 'blue'
inputs:
  version:
    description: 'Version to publish'
    required: false
  repo-name:
    description: 'Repository name'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check environment
      shell: bash
      run: |
        if [ ! -d ".github/doxygen" ]; then
          echo "::error::Directory .github/doxygen not found"
          exit 1
        fi

    - name: Show Action Version
      shell: bash
      run: |
        echo "::group::Action Version Info"
        echo "Using keypop-action-docs version: ${{ github.ref_name }}"
        echo "SHA: ${{ github.sha }}"
        echo "Action path: ${{ github.action_path }}"
        echo "::endgroup::"

    - name: List action path contents
      shell: bash
      run: |
        echo "Contents of ${{ github.action_path }}:"
        ls -la "${{ github.action_path }}"
        echo "Contents of ${{ github.action_path }}/scripts:"
        ls -la "${{ github.action_path }}/scripts"

    - name: List repository contents
      shell: bash
      run: |
        echo "Contents of /home/runner/work/keypop-card-cpp-api/keypop-card-cpp-api:"
        ls -la "/home/runner/work/keypop-card-cpp-api/keypop-card-cpp-api"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Display Python environment
      shell: bash
      run: |
        python --version
        pip --version
        echo "pythonLocation: ${{ env.pythonLocation }}"
        echo "PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}"
        echo "Python_ROOT_DIR: ${{ env.Python_ROOT_DIR }}"
        echo "Python2_ROOT_DIR: ${{ env.Python2_ROOT_DIR }}"
        echo "Python3_ROOT_DIR: ${{ env.Python3_ROOT_DIR }}"
        echo "LD_LIBRARY_PATH: ${{ env.LD_LIBRARY_PATH }}"

    - name: Install Python dependencies
      shell: bash
      run: |
        echo "Installing Python dependencies from ${{ github.action_path }}/scripts/requirements.txt"
        python -m pip install --upgrade pip
        pip install -r "${{ github.action_path }}/scripts/requirements.txt"

    - name: Check version
      if: inputs.version != ''
      shell: bash
      run: python ${{ github.action_path }}/scripts/check_version.py "${{ inputs.version }}"

    - name: Patch Doxyfile
      if: always()
      shell: bash
      run: python ${{ github.action_path }}/scripts/patch_doxyfile.py "${{ inputs.version }}"

    - name: Copy Doxyfile and logo.svg
      shell: bash
      run: |
        echo "Copying Doxyfile and logo.svg from ${{ github.action_path }}/doxygen/ to /home/runner/work/${{ inputs.repo-name }}/${{ inputs.repo-name }}/.github/doxygen/"
        cp -r "${{ github.action_path }}/doxygen/." "/home/runner/work/${{ inputs.repo-name }}/${{ inputs.repo-name }}/.github/doxygen/"

    - name: Generate documentation
      uses: mattnotmitt/doxygen-action@v1.9.2
      with:
        working-directory: .github/doxygen/
        doxyfile-path: ./Doxyfile

    - name: Prepare documentation
      shell: bash
      run: |
        python ${{ github.action_path }}/scripts/prepare_documentation.py \
          --github-org ${GITHUB_REPOSITORY_OWNER} \
          --repo-name "${{ inputs.repo-name }}" \
          --version "${{ inputs.version }}"
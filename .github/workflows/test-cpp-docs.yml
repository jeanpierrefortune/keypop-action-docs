name: Test C++ Documentation Action
on:
  pull_request:
    paths:
      - 'doxygen/action.yml'
      - '.github/workflows/test-cpp-docs.yml'
      - 'doxygen/scripts/**'
      - 'doxygen/doxygen/**'
  push:
    branches: [ main ]
    paths:
      - 'doxygen/action.yml'
      - '.github/workflows/test-cpp-docs.yml'
      - 'doxygen/scripts/**'
      - 'doxygen/doxygen/**'
  workflow_dispatch:

jobs:
  test-cpp-docs:
    name: Test C++ Doxygen Action
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git User
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Create temporary gh-pages branch for testing
      - name: Setup gh-pages branch
        run: |
          # Create and checkout test branch to save current state
          git checkout -b test-branch
          
          # Create orphan gh-pages branch without removing files
          git checkout --orphan gh-pages
          git reset --mixed
          
          # Only keep what we need
          git clean -fd
          find . -maxdepth 1 ! -name '.git' ! -name 'doxygen' ! -name '.github' -exec rm -rf {} +
          
          # Initial commit
          touch .keep
          git add .keep
          git commit -m "Initialize gh-pages branch"

      # Test RC version
      - name: Create test environment for RC
        run: |
          mkdir -p .github/doxygen/test/src .github/doxygen/out/html
          
          cat > CMakeLists.txt << 'EOL'
          cmake_minimum_required(VERSION 3.5)

          SET(RC_VERSION "1")

          PROJECT(KeypopDocs
              VERSION 1.0.0
              C CXX)

          if(DEFINED RC_VERSION)
              SET(PACKAGE_VERSION "${PROJECT_VERSION}-rc${RC_VERSION}")
          else()
              SET(PACKAGE_VERSION "${PROJECT_VERSION}")
          endif()

          SET(PACKAGE_NAME "keypop-docs")
          SET(PACKAGE_VERSION ${CMAKE_PROJECT_VERSION})
          SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")
          EOL

          cat > .github/doxygen/test/src/example.h << 'EOL'
          /**
           * @brief Example class for testing C++ documentation
           */
          class Example {
          public:
              /** Do something */
              void doSomething();
          };
          EOL

          cat > .github/doxygen/Doxyfile << 'EOL'
          PROJECT_NAME           = "C++ Test Project"
          OUTPUT_DIRECTORY       = out
          GENERATE_HTML         = YES
          HTML_OUTPUT          = html
          INPUT                = test/src
          FILE_PATTERNS        = *.h
          RECURSIVE           = YES
          EOL

      - name: Test docs with RC version
        uses: ./doxygen
        with:
          repo-name: keypop-action-docs
          version: "1.0.0-rc1"

      - name: Verify RC version docs
        run: |
          cd keypop-action-docs
          if [ ! -d "1.0.0-rc1" ]; then
            echo "RC version directory was not created"
            exit 1
          fi

      # Test release version
      - name: Create test environment for release
        run: |
          cat > CMakeLists.txt << 'EOL'
          cmake_minimum_required(VERSION 3.5)

          PROJECT(KeypopDocs
              VERSION 1.0.0
              C CXX)

          SET(PACKAGE_VERSION "${PROJECT_VERSION}")
          SET(PACKAGE_NAME "keypop-docs")
          SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")
          EOL

      - name: Test docs with release version
        uses: ./doxygen
        with:
          repo-name: keypop-action-docs
          version: "1.0.0"

      - name: Verify release version docs
        run: |
          cd keypop-action-docs
          if [ ! -d "1.0.0" ]; then
            echo "Release version directory was not created"
            exit 1
          fi
          if [ ! -L "latest-stable" ]; then
            echo "latest-stable symlink was not created"
            exit 1
          fi
          if [ ! -f "robots.txt" ]; then
            echo "robots.txt was not created"
            exit 1
          fi

      # Cleanup
      - name: Cleanup test branches
        if: always()
        run: |
          git checkout main || git checkout master
          git branch -D test-branch gh-pages || true